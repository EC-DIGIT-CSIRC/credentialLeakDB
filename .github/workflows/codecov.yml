name: Codecov
on: [push]
jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PORT: 8080
      DBHOST: localhost
      DBUSER: credentialleakdb
      DBPASSWORD: 1234testForUnitTesting
      DBNAME: credentialleakdb
      VIPLIST: tests/fixtures/vips.txt
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: set up demo database
      run: |
        sudo apt install postgresql 
        # sudo -u postgres pg_ctlcluster 12 main start
        sudo service postgresql start
        # sudo -u postgres pg_ctlcluster 12 main start
        sudo -u postgres createdb credentialleakdb
        sudo -u postgres createuser -s $DBUSER
        sudo -u postgres psql $DBNAME < db.sql
        sudo -u postgres psql -c "ALTER role $DBUSER WITH PASSWORD '$DBPASSWORD'"
    - name: prepare environment and mocking
      run: |
        cp config.SAMPLE.py api/config.py
        echo "PORT=$PORT" > ENV
        echo "DBHOST=$DBHOST" >> ENV
        echo "DBUSER=$DBUSER" >> ENV
        echo "DBPASSWORD=$DBPASSWORD" >> ENV
        echo "DBNAME=$DBNAME" >> ENV
    - name: Generate coverage report
      run: |
        pip install pytest
        pip install pytest-cov
        pip install -r requirements.txt
        python -m pytest -vv --cov=./ --cov-report=term --cov-report=xml tests/
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        directory: ./coverage/reports/
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
