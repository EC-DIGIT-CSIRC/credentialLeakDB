# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: flak8 and pytest

on:
  push:
    branches: [ main, release/* ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: set up demo database
      run: |
        sudo apt install postgresql-12 
        sudo -u postgres pg_ctlcluster 12 main start
        sudo service postgresql start
        # sudo -u postgres pg_ctlcluster 12 main start
        sudo -u postgres createdb credentialleakdb
        sudo -u postgres createuser -s credentialleakdb
        sudo -u postgres psql credentialleakdb < db.sql
        sudo -u postgres psql -c "ALTER role credentialleakdb WITH PASSWORD '1234testForUnitTesting'"
    - name: prepare environment and mocking
      run: |
        cp config.SAMPLE.py api/config.py
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Start the RESTful API server
      run: |
        export PORT=8080
        export DBHOST=localhost
        export DBUSER=credentialleakdb
        export DBNAME=credentialleakdb
        export DBPASSWORD="1234testForUnitTesting"
        uvicorn --host 127.0.0.1 --port 8080 --reload api.main:app &
    - name: Test with pytest
      run: |
        python -m pytest
